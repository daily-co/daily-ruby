=begin
#Daily API

#The Daily REST API offers the ability to manage the following:  - Overall Domain Configuration - Individual Room creation and config management  - Meeting token creation and validation - Recording and compositing management  - Meeting analytics - Logs and metrics - Real-time presence  Please reach out to help@daily.co if we can help with anything

The version of the OpenAPI document: 1.1.1
Contact: help@daily.co
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Daily::LogsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'LogsApi' do
  before do
    # run before each test
    @api_instance = Daily::LogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LogsApi' do
    it 'should create an instance of LogsApi' do
      expect(@api_instance).to be_instance_of(Daily::LogsApi)
    end
  end

  # unit tests for list_api_logs
  # /logs/api
  # @param [Hash] opts the optional parameters
  # @option opts [String] :starting_after Given the log ID, will return all records after that ID. See [pagination docs](../../rest-api#pagination)
  # @option opts [String] :ending_before Given the log ID, will return all records before that ID. See [pagination docs](../../rest-api#pagination)
  # @option opts [Integer] :limit Limit the number of logs and/or metrics returned
  # @option opts [String] :source The source of the given logs, either &#x60;\&quot;api\&quot;&#x60; or &#x60;\&quot;webhook\&quot;&#x60;
  # @option opts [String] :url Either the webhook server URL, or the API endpoint that was logged
  # @return [ListAPILogs200Response]
  describe 'list_api_logs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_logs
  # /logs
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :include_logs If true, you get a \&quot;logs\&quot; array in the results
  # @option opts [Boolean] :include_metrics If true, results have \&quot;metrics\&quot; array
  # @option opts [String] :user_session_id Filters by this user ID (aka \&quot;participant ID\&quot;). Required if &#x60;mtgSessionId&#x60; is not present in the request
  # @option opts [String] :mtg_session_id Filters by this Session ID. Required if &#x60;userSessionId&#x60; is not present in the request
  # @option opts [String] :log_level Filters by the given log level name
  # @option opts [String] :order ASC or DESC, case insensitive
  # @option opts [Integer] :start_time A JS timestamp (ms since epoch in UTC)
  # @option opts [Integer] :end_time A JS timestamp (ms since epoch), defaults to the current time
  # @option opts [Integer] :limit Limit the number of logs and/or metrics returned
  # @option opts [Integer] :offset Number of records to skip before returning results
  # @return [Object]
  describe 'list_logs test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
