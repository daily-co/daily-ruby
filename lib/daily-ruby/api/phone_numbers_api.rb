=begin
#Daily API

#The Daily REST API offers the ability to manage the following:  - Overall Domain Configuration - Individual Room creation and config management  - Meeting token creation and validation - Recording and compositing management  - Meeting analytics - Logs and metrics - Real-time presence  Please reach out to help@daily.co if we can help with anything

The version of the OpenAPI document: 1.1.1
Contact: help@daily.co
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'cgi'

module Daily
  class PhoneNumbersApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # /buy-phone-number
    # This will buy a phone number. In the POST request you can either provide the phone number you want to buy, or leave it empty. If the specified `number` is still available, it will be bought or the API will return a failure. Alternatively, if you skipped the `number` field, a random phone number from California (CA) will be bought.
    # @param [Hash] opts the optional parameters
    # @option opts [BuyPhoneNumberRequest] :buy_phone_number_request 
    # @return [Object]
    def buy_phone_number(opts = {})
      data, _status_code, _headers = buy_phone_number_with_http_info(opts)
      data
    end

    # /buy-phone-number
    # This will buy a phone number. In the POST request you can either provide the phone number you want to buy, or leave it empty. If the specified &#x60;number&#x60; is still available, it will be bought or the API will return a failure. Alternatively, if you skipped the &#x60;number&#x60; field, a random phone number from California (CA) will be bought.
    # @param [Hash] opts the optional parameters
    # @option opts [BuyPhoneNumberRequest] :buy_phone_number_request 
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def buy_phone_number_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumbersApi.buy_phone_number ...'
      end
      # resource path
      local_var_path = '/buy-phone-number'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'buy_phone_number_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['sec0']

      new_options = opts.merge(
        :operation => :"PhoneNumbersApi.buy_phone_number",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumbersApi#buy_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # /list-available-numbers
    # Search for available phone numbers to purchase
    # @param [Hash] opts the optional parameters
    # @option opts [String] :areacode An areacode to search within.
    # @option opts [String] :region A region or state to search within. Must be an ISO 3166-2 alpha-2 code, i.e. CA for California. Cannot be used in combination with areacode.
    # @option opts [String] :city A specific City to search within. Example, New York. The string must be url encoded because it is a url parameter. Must be used in combination with region. Cannot be used in combination with areacode, starts_with, contains, or ends_with.
    # @option opts [String] :contains A string of 3 to 7 digits that should appear somewhere in the number.
    # @option opts [String] :starts_with A string of 3 to 7 digits that should be used as the start of a number. Cannot be used in combination with contains or ends_with.
    # @option opts [String] :ends_with A string of 3 to 7 digits that should be used as the end of a number. Cannot be used in combination with starts_with or contains.
    # @return [nil]
    def list_available_numbers(opts = {})
      list_available_numbers_with_http_info(opts)
      nil
    end

    # /list-available-numbers
    # Search for available phone numbers to purchase
    # @param [Hash] opts the optional parameters
    # @option opts [String] :areacode An areacode to search within.
    # @option opts [String] :region A region or state to search within. Must be an ISO 3166-2 alpha-2 code, i.e. CA for California. Cannot be used in combination with areacode.
    # @option opts [String] :city A specific City to search within. Example, New York. The string must be url encoded because it is a url parameter. Must be used in combination with region. Cannot be used in combination with areacode, starts_with, contains, or ends_with.
    # @option opts [String] :contains A string of 3 to 7 digits that should appear somewhere in the number.
    # @option opts [String] :starts_with A string of 3 to 7 digits that should be used as the start of a number. Cannot be used in combination with contains or ends_with.
    # @option opts [String] :ends_with A string of 3 to 7 digits that should be used as the end of a number. Cannot be used in combination with starts_with or contains.
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def list_available_numbers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumbersApi.list_available_numbers ...'
      end
      # resource path
      local_var_path = '/list-available-numbers'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'areacode'] = opts[:'areacode'] if !opts[:'areacode'].nil?
      query_params[:'region'] = opts[:'region'] if !opts[:'region'].nil?
      query_params[:'city'] = opts[:'city'] if !opts[:'city'].nil?
      query_params[:'contains'] = opts[:'contains'] if !opts[:'contains'].nil?
      query_params[:'starts_with'] = opts[:'starts_with'] if !opts[:'starts_with'].nil?
      query_params[:'ends_with'] = opts[:'ends_with'] if !opts[:'ends_with'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['sec0']

      new_options = opts.merge(
        :operation => :"PhoneNumbersApi.list_available_numbers",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumbersApi#list_available_numbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # /purchased-phone-numbers
    # List the purchased phone numbers for this domain
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def purchased_phone_nunbers(opts = {})
      purchased_phone_nunbers_with_http_info(opts)
      nil
    end

    # /purchased-phone-numbers
    # List the purchased phone numbers for this domain
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def purchased_phone_nunbers_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumbersApi.purchased_phone_nunbers ...'
      end
      # resource path
      local_var_path = '/purchased-phone-numbers'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['sec0']

      new_options = opts.merge(
        :operation => :"PhoneNumbersApi.purchased_phone_nunbers",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumbersApi#purchased_phone_nunbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # release-phone-number/:id
    # Release a purchased number. The number is referenced by its id. A number cannot be deleted within the 14 days of purchase. Calling this API before this period expires results in an error.
    # @param id [String] 
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def release_phone_number(id, opts = {})
      data, _status_code, _headers = release_phone_number_with_http_info(id, opts)
      data
    end

    # release-phone-number/:id
    # Release a purchased number. The number is referenced by its id. A number cannot be deleted within the 14 days of purchase. Calling this API before this period expires results in an error.
    # @param id [String] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def release_phone_number_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PhoneNumbersApi.release_phone_number ...'
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling PhoneNumbersApi.release_phone_number"
      end
      # resource path
      local_var_path = '/release-phone-number/{id}'.sub('{' + 'id' + '}', CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['sec0']

      new_options = opts.merge(
        :operation => :"PhoneNumbersApi.release_phone_number",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumbersApi#release_phone_number\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
