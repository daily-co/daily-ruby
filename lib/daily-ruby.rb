=begin
#Daily API

#The Daily REST API offers the ability to manage the following:  - Overall Domain Configuration - Individual Room creation and config management  - Meeting token creation and validation - Recording and compositing management  - Meeting analytics - Logs and metrics - Real-time presence  Please reach out to help@daily.co if we can help with anything

The version of the OpenAPI document: 1.1.1
Contact: help@daily.co
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

# Common files
require 'daily-ruby/api_client'
require 'daily-ruby/api_error'
require 'daily-ruby/version'
require 'daily-ruby/configuration'

# Models
require 'daily-ruby/models/batch_processor_error'
require 'daily-ruby/models/batch_processor_error_payload'
require 'daily-ruby/models/batch_processor_error_payload_input'
require 'daily-ruby/models/batch_processor_job_finished'
require 'daily-ruby/models/batch_processor_job_finished_payload'
require 'daily-ruby/models/batch_processor_job_finished_payload_input'
require 'daily-ruby/models/batch_processor_job_finished_payload_output'
require 'daily-ruby/models/batch_processor_job_finished_payload_output_concept'
require 'daily-ruby/models/batch_processor_job_finished_payload_output_soap'
require 'daily-ruby/models/batch_processor_job_finished_payload_output_soap_s3_config'
require 'daily-ruby/models/batch_processor_job_finished_payload_output_summary'
require 'daily-ruby/models/batch_processor_job_finished_payload_output_transcription_inner'
require 'daily-ruby/models/batch_room_create_request'
require 'daily-ruby/models/batch_room_create_request_rooms_inner'
require 'daily-ruby/models/batch_room_delete200_response'
require 'daily-ruby/models/buy_phone_number_request'
require 'daily-ruby/models/create_meeting_token200_response'
require 'daily-ruby/models/create_meeting_token_request'
require 'daily-ruby/models/create_room200_response'
require 'daily-ruby/models/create_room_request'
require 'daily-ruby/models/daily_live_streaming_options'
require 'daily-ruby/models/daily_live_streaming_options_rtmp_url'
require 'daily-ruby/models/daily_streaming_active_participant_layout_config'
require 'daily-ruby/models/daily_streaming_custom_layout_config'
require 'daily-ruby/models/daily_streaming_custom_layout_config_composition_params_value'
require 'daily-ruby/models/daily_streaming_default_layout_config'
require 'daily-ruby/models/daily_streaming_endpoint'
require 'daily-ruby/models/daily_streaming_layout_config'
require 'daily-ruby/models/daily_streaming_options'
require 'daily-ruby/models/daily_streaming_portrait_layout_config'
require 'daily-ruby/models/daily_streaming_portrait_layout_variant'
require 'daily-ruby/models/daily_streaming_single_participant_layout_config'
require 'daily-ruby/models/delete_transcript200_response'
require 'daily-ruby/models/dialout_properties'
require 'daily-ruby/models/dialout_properties_codecs'
require 'daily-ruby/models/domain'
require 'daily-ruby/models/domain_properties'
require 'daily-ruby/models/eject200_response'
require 'daily-ruby/models/eject_request'
require 'daily-ruby/models/get_domain_config200_response'
require 'daily-ruby/models/get_domain_config200_response_config'
require 'daily-ruby/models/get_domain_config200_response_config_recordings_bucket'
require 'daily-ruby/models/get_meeting_info200_response'
require 'daily-ruby/models/get_meeting_info200_response_data_inner'
require 'daily-ruby/models/get_meeting_info200_response_data_inner_participants_inner'
require 'daily-ruby/models/get_presence200_response'
require 'daily-ruby/models/get_presence200_response_aivw_whz_hl_lhr_sd_hdw7_ew_inner'
require 'daily-ruby/models/get_recording_info200_response'
require 'daily-ruby/models/get_recording_info200_response_tracks_inner'
require 'daily-ruby/models/get_recording_link200_response'
require 'daily-ruby/models/get_transcript_info200_response'
require 'daily-ruby/models/get_transcript_info200_response_out_params'
require 'daily-ruby/models/get_transcript_link200_response'
require 'daily-ruby/models/list_api_logs200_response'
require 'daily-ruby/models/list_recordings200_response'
require 'daily-ruby/models/list_recordings200_response_data_inner'
require 'daily-ruby/models/list_rooms200_response'
require 'daily-ruby/models/list_rooms200_response_data_inner'
require 'daily-ruby/models/list_rooms200_response_data_inner_config'
require 'daily-ruby/models/list_transcript200_response'
require 'daily-ruby/models/list_transcript200_response_data_inner'
require 'daily-ruby/models/meeting_ended'
require 'daily-ruby/models/meeting_ended_payload'
require 'daily-ruby/models/meeting_participants_get_res'
require 'daily-ruby/models/meeting_participants_get_res_data_inner'
require 'daily-ruby/models/meeting_started'
require 'daily-ruby/models/meeting_started_payload'
require 'daily-ruby/models/meetings_meeting_get_res'
require 'daily-ruby/models/participant_joined'
require 'daily-ruby/models/participant_joined_payload'
require 'daily-ruby/models/participant_joined_payload_permissions'
require 'daily-ruby/models/participant_left'
require 'daily-ruby/models/participant_left_payload'
require 'daily-ruby/models/permissions'
require 'daily-ruby/models/permissions_can_admin'
require 'daily-ruby/models/permissions_can_send'
require 'daily-ruby/models/pin_dialin_inner'
require 'daily-ruby/models/pin_dialin_inner_ivr_greeting'
require 'daily-ruby/models/pinless_call_update_request'
require 'daily-ruby/models/pinless_dialin_inner'
require 'daily-ruby/models/post_webhook'
require 'daily-ruby/models/properties'
require 'daily-ruby/models/recording_error'
require 'daily-ruby/models/recording_error_payload'
require 'daily-ruby/models/recording_ready_to_download'
require 'daily-ruby/models/recording_ready_to_download_payload'
require 'daily-ruby/models/recording_started'
require 'daily-ruby/models/recording_started_payload'
require 'daily-ruby/models/recording_streaming_options'
require 'daily-ruby/models/recordings_bucket'
require 'daily-ruby/models/room_dial_out_send_dtmf_request'
require 'daily-ruby/models/room_dial_out_stop_request'
require 'daily-ruby/models/room_properties'
require 'daily-ruby/models/room_properties_streaming_endpoints_inner'
require 'daily-ruby/models/room_properties_streaming_endpoints_inner_hls_config_variants_inner'
require 'daily-ruby/models/room_sip_call_transfer_request'
require 'daily-ruby/models/rooms_room_name_get_res'
require 'daily-ruby/models/rooms_room_name_presence_get_res'
require 'daily-ruby/models/rooms_room_name_presence_get_res_data_inner'
require 'daily-ruby/models/send_app_message_request'
require 'daily-ruby/models/set_room_config_request'
require 'daily-ruby/models/set_session_data_request'
require 'daily-ruby/models/streaming_ended'
require 'daily-ruby/models/streaming_ended_payload'
require 'daily-ruby/models/streaming_error'
require 'daily-ruby/models/streaming_error_payload'
require 'daily-ruby/models/streaming_started'
require 'daily-ruby/models/streaming_started_payload'
require 'daily-ruby/models/streaming_updated'
require 'daily-ruby/models/streaming_updated_payload'
require 'daily-ruby/models/transcription_bucket'
require 'daily-ruby/models/transcription_properties'
require 'daily-ruby/models/transcription_properties_endpointing'
require 'daily-ruby/models/transcription_properties_redact'
require 'daily-ruby/models/update_permissions_request'
require 'daily-ruby/models/update_permissions_request_data_value'
require 'daily-ruby/models/update_permissions_request_data_value_can_send'
require 'daily-ruby/models/update_webhook'
require 'daily-ruby/models/validate_meeting_token200_response'
require 'daily-ruby/models/waiting_participant_joined'
require 'daily-ruby/models/waiting_participant_joined_payload'
require 'daily-ruby/models/waiting_participant_left'
require 'daily-ruby/models/waiting_participant_left_payload'
require 'daily-ruby/models/webhook'

# APIs
require 'daily-ruby/api/batch_rooms_api'
require 'daily-ruby/api/dialin_api'
require 'daily-ruby/api/domain_api'
require 'daily-ruby/api/logs_api'
require 'daily-ruby/api/meeting_tokens_api'
require 'daily-ruby/api/meetings_api'
require 'daily-ruby/api/phone_numbers_api'
require 'daily-ruby/api/presence_api'
require 'daily-ruby/api/recordings_api'
require 'daily-ruby/api/rooms_api'
require 'daily-ruby/api/transcript_api'
require 'daily-ruby/api/webhooks_api'

module Daily
  class << self
    # Customize default settings for the SDK using block.
    #   Daily.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
